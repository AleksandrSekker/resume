{"version":3,"sources":["style/Hobbies.module.css","image/2020-05-25 09.00.14.jpg","style/LearningExperience.module.css","components/Avatar.tsx","components/LearningExperience.tsx","components/Hobbies.tsx","App.tsx","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx","style/Avatar.module.css"],"names":["module","exports","Avatar","className","style","containerFluid","container","src","AvatarImage","alt","image","secondContainer","message","throwLine","flexbox","flexboxOne","flexboxTwo","containerSocialMedia","socialMediaCenter","href","icon","faGithub","icons","faLinkedin","faSkype","faTelegram","LearningExperience","mainText","flex","flexColumn","firstContainer","faHtml5","html","faCss3Alt","css","faSass","sass","faBootstrap","bootstrap","faGitAlt","git","faTerminal","terminal","verticalLine","dot","dotOne","dotTwo","dotThree","dotFour","dotFive","flexColumnTwo","faJs","js","faReact","react","Hobbies","text","hobbyContainer","faBook","faYoutube","faCode","App","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.71dff49d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Hobbies_text__3lcHM\",\"hobbyContainer\":\"Hobbies_hobbyContainer__1nYV6\"};","module.exports = __webpack_public_path__ + \"static/media/2020-05-25 09.00.14.19afdf95.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainText\":\"LearningExperience_mainText__3Wbo3\",\"firstContainer\":\"LearningExperience_firstContainer__14Y_x\",\"secondContainer\":\"LearningExperience_secondContainer__1y6xa\",\"html\":\"LearningExperience_html__BIzdC\",\"css\":\"LearningExperience_css__1UGCR\",\"js\":\"LearningExperience_js__3nVij\",\"sass\":\"LearningExperience_sass__3VRT8\",\"git\":\"LearningExperience_git__1OW3i\",\"terminal\":\"LearningExperience_terminal__2pXd_\",\"bootstrap\":\"LearningExperience_bootstrap__crjsw\",\"react\":\"LearningExperience_react__40mND\",\"node\":\"LearningExperience_node__1zDXH\",\"verticalLine\":\"LearningExperience_verticalLine__DYCNS\",\"dot\":\"LearningExperience_dot__3y_RM\",\"dotOne\":\"LearningExperience_dotOne__2rJBY\",\"dotTwo\":\"LearningExperience_dotTwo__25fcQ\",\"dotThree\":\"LearningExperience_dotThree__3UFwM\",\"dotFour\":\"LearningExperience_dotFour__1iPTE\",\"dotFive\":\"LearningExperience_dotFive__2T-52\",\"flex\":\"LearningExperience_flex__1bhiy\",\"flexColumn\":\"LearningExperience_flexColumn__3PZrB\",\"flexColumnTwo\":\"LearningExperience_flexColumnTwo__3-dlK\"};","import React from 'react';\nimport AvatarImage from '../image/2020-05-25 09.00.14.jpg';\nimport style from '../style/Avatar.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faLinkedin,\n  faTelegram,\n  faGithub,\n  faSkype,\n} from '@fortawesome/free-brands-svg-icons';\nexport interface AvatarProps {}\n\nconst Avatar: React.SFC<AvatarProps> = () => {\n  return (\n    <div className={style.containerFluid}>\n      <div className={style.container}>\n        <img src={AvatarImage} alt='avatar' className={style.image} />\n\n        <div className={style.secondContainer}>\n          <div className={style.message}>Hello</div>\n          <h2>I'm Aleksandr Sekker</h2>\n          <h1>Looking for junior Front End developer position</h1>\n          <hr className={style.throwLine} />\n          <div className={style.flexbox}>\n            <div className={style.flexboxOne}>\n              <p>AGE</p>\n              <p>Location</p>\n              <p>E-Maile</p>\n              <p>PHONE</p>\n            </div>\n            <div className={style.flexboxTwo}>\n              <p>23</p>\n              <p>Ukraine, Kryvyi Rih</p>\n              <p>aleksandr.sekker@gmail.com</p>\n              <p>0686902733</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={style.containerSocialMedia}>\n        <div className={style.socialMediaCenter}>\n          <a href='https://github.com/AleksandrSekker'>\n            <FontAwesomeIcon icon={faGithub} className={style.icons} />\n          </a>\n          <a href='https://www.linkedin.com/in/aleksandr-sekker-521352161/'>\n            <FontAwesomeIcon icon={faLinkedin} className={style.icons} />\n          </a>\n          <a href='https://join.skype.com/invite/ne1fLrVxBoC4'>\n            <FontAwesomeIcon icon={faSkype} className={style.icons} />\n          </a>\n          <a href='https://t.me/sekk_er'>\n            <FontAwesomeIcon icon={faTelegram} className={style.icons} />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport style from '../style/LearningExperience.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTerminal } from '@fortawesome/free-solid-svg-icons';\nimport {\n  faHtml5,\n  faCss3Alt,\n  faJs,\n  faSass,\n  faGitAlt,\n  faBootstrap,\n  faReact,\n  faNode,\n  faNodeJs,\n} from '@fortawesome/free-brands-svg-icons';\nexport interface LearningExperienceProps {}\n\nconst LearningExperience: React.SFC<LearningExperienceProps> = () => {\n  return (\n    <>\n      <h1 className={style.mainText}>Learning Experience</h1>\n      <div className={style.flex}>\n        <div className={style.flexColumn}>\n          <div className={style.firstContainer}>\n            <FontAwesomeIcon icon={faHtml5} className={style.html} />\n            <FontAwesomeIcon icon={faCss3Alt} className={style.css} />\n\n            <p>layout, animation, typography, colors</p>\n            <p>\n              Responsive design, grid, flexbox, semantic approach and media\n              queries\n            </p>\n          </div>\n          <div className={style.firstContainer}>\n            <FontAwesomeIcon icon={faSass} className={style.sass} />\n            <FontAwesomeIcon icon={faBootstrap} className={style.bootstrap} />\n            <FontAwesomeIcon icon={faGitAlt} className={style.git} />\n            <FontAwesomeIcon icon={faTerminal} className={style.terminal} />\n            <p>asdfsdf</p>\n          </div>\n          <div className={style.firstContainer}>\n            <p>\n              Also sometimes i use typescript, few times coding on react native\n              (using api) for test projects. Actually almost didn't use back end\n              technology, but understand how work node, express and mongo db\n            </p>\n          </div>\n        </div>\n        <div className={style.verticalLine}>\n          <div className={`${style.dot} ${style.dotOne}`}></div>\n          <div className={`${style.dot} ${style.dotTwo}`}></div>\n          <div className={`${style.dot} ${style.dotThree}`}></div>\n          <div className={`${style.dot} ${style.dotFour}`}></div>\n          <div className={`${style.dot} ${style.dotFive}`}></div>\n        </div>\n        <div className={style.flexColumnTwo}>\n          <div className={style.secondContainer}>\n            <FontAwesomeIcon icon={faJs} className={style.js} />\n            <p>Start from basic: Variables, Types, function, loops, objects </p>\n            <p>\n              DOM tree, start building project, timer, clock, quize, quizzes\n              etc. Learn es6, work with APIs\n            </p>\n          </div>\n          <div className={style.secondContainer}>\n            <FontAwesomeIcon icon={faReact} className={style.react} />\n            <p>\n              Start learn react, react router, hooks. For learning react build\n              small thing like counter, todolist, slider, filterable list,\n              random quote machine etc. Later start using redux for state\n              managment\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LearningExperience;\n","import * as React from 'react';\nimport style from '../style/Hobbies.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook, faCode } from '@fortawesome/free-solid-svg-icons';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\nexport interface HobbiesProps {}\n\nconst Hobbies: React.SFC<HobbiesProps> = () => {\n  return (\n    <div>\n      <h1 className={style.text}>Interest</h1>\n      <div className={style.hobbyContainer}>\n        <FontAwesomeIcon icon={faBook} />\n        <FontAwesomeIcon icon={faYoutube} />\n        <FontAwesomeIcon icon={faCode} />\n      </div>\n    </div>\n  );\n};\n\nexport default Hobbies;\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\nimport Avatar from './components/Avatar';\r\nimport LearningExperience from './components/LearningExperience';\r\nimport Hobbies from './components/Hobbies';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='containerForAll'>\r\n      <Avatar />\r\n      <LearningExperience />\r\n      <Hobbies />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\n\r\ninterface CounterState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerFluid\":\"Avatar_containerFluid__TVFwE\",\"container\":\"Avatar_container__hEQs2\",\"secondContainer\":\"Avatar_secondContainer__LzQaJ\",\"containerSocialMedia\":\"Avatar_containerSocialMedia__3kAKA\",\"image\":\"Avatar_image__32WCZ\",\"message\":\"Avatar_message__Cpb2X\",\"flexbox\":\"Avatar_flexbox__3T33G\",\"flexboxTwo\":\"Avatar_flexboxTwo__mmw0R\",\"socialMediaCenter\":\"Avatar_socialMediaCenter__2xQHQ\",\"icons\":\"Avatar_icons__ksEtC\"};"],"sourceRoot":""}