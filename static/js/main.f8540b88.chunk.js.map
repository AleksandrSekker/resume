{"version":3,"sources":["style/Avatar.module.css","svg/uk.svg","image/2020-05-25 09.00.14.jpg","svg/ukraine.svg","style/LearningExperience.module.css","components/Avatar.tsx","components/LearningExperience.tsx","App.tsx","features/counter/counterSlice.ts","redux/languageSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","Avatar","useState","EnglishFlag","flag","setflag","hello","sethello","name","setname","age","setage","location","setlocation","locationName","setlocationName","email","setemail","phone","setphone","className","style","containerFluid","buttons","onClick","UkraineFlag","src","alt","icon","faSun","themeSun","container","AvatarImage","image","secondContainer","message","throwLine","flexbox","contText","textFirst","textSecond","containerSocialMedia","socialMediaCenter","href","faGithub","icons","faLinkedin","faSkype","faTelegram","LearningExperience","mainText","flex","flexColumn","firstContainer","faHtml5","html","faCss3Alt","css","faSass","sass","faBootstrap","bootstrap","faGitAlt","git","faTerminal","terminal","verticalLine","dot","dotOne","dotTwo","dotThree","dotFour","dotFive","flexColumnTwo","faJs","js","faReact","react","App","counterSlice","createSlice","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","languageSlice","greetEng","greetUa","store","configureStore","reducer","counter","counterReducer","language","languageReducer","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.f8540b88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerFluid\":\"Avatar_containerFluid__TVFwE\",\"buttons\":\"Avatar_buttons__3Te0C\",\"flag\":\"Avatar_flag__1y4qh\",\"themeSun\":\"Avatar_themeSun__1zK3B\",\"container\":\"Avatar_container__hEQs2\",\"secondContainer\":\"Avatar_secondContainer__LzQaJ\",\"containerSocialMedia\":\"Avatar_containerSocialMedia__3kAKA\",\"image\":\"Avatar_image__32WCZ\",\"message\":\"Avatar_message__Cpb2X\",\"contText\":\"Avatar_contText__3s7Eh\",\"textFirst\":\"Avatar_textFirst__S9ZFp\",\"textSecond\":\"Avatar_textSecond__1nYg_\",\"flexbox\":\"Avatar_flexbox__3T33G\",\"flexboxTwo\":\"Avatar_flexboxTwo__mmw0R\",\"socialMediaCenter\":\"Avatar_socialMediaCenter__2xQHQ\",\"icons\":\"Avatar_icons__ksEtC\"};","module.exports = __webpack_public_path__ + \"static/media/uk.b6e5300d.svg\";","module.exports = __webpack_public_path__ + \"static/media/2020-05-25 09.00.14.19afdf95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ukraine.ce258373.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainText\":\"LearningExperience_mainText__3Wbo3\",\"firstContainer\":\"LearningExperience_firstContainer__14Y_x\",\"secondContainer\":\"LearningExperience_secondContainer__1y6xa\",\"html\":\"LearningExperience_html__BIzdC\",\"css\":\"LearningExperience_css__1UGCR\",\"js\":\"LearningExperience_js__3nVij\",\"sass\":\"LearningExperience_sass__3VRT8\",\"git\":\"LearningExperience_git__1OW3i\",\"terminal\":\"LearningExperience_terminal__2pXd_\",\"bootstrap\":\"LearningExperience_bootstrap__crjsw\",\"react\":\"LearningExperience_react__40mND\",\"node\":\"LearningExperience_node__1zDXH\",\"verticalLine\":\"LearningExperience_verticalLine__DYCNS\",\"dot\":\"LearningExperience_dot__3y_RM\",\"dotOne\":\"LearningExperience_dotOne__2rJBY\",\"dotTwo\":\"LearningExperience_dotTwo__25fcQ\",\"dotThree\":\"LearningExperience_dotThree__3UFwM\",\"dotFour\":\"LearningExperience_dotFour__1iPTE\",\"dotFive\":\"LearningExperience_dotFive__2T-52\",\"flex\":\"LearningExperience_flex__1bhiy\",\"flexColumn\":\"LearningExperience_flexColumn__3PZrB\",\"flexColumnTwo\":\"LearningExperience_flexColumnTwo__3-dlK\"};","import React, { useState } from 'react';\nimport AvatarImage from '../image/2020-05-25 09.00.14.jpg';\n\nimport style from '../style/Avatar.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faLinkedin,\n  faTelegram,\n  faGithub,\n  faSkype,\n} from '@fortawesome/free-brands-svg-icons';\nimport '../assets/main.css';\nimport '../style/Avatar.module.css';\nimport { faLanguage, faSun, faMoon } from '@fortawesome/free-solid-svg-icons';\nimport EnglishFlag from '../svg/uk.svg';\nimport UkraineFlag from '../svg/ukraine.svg';\nimport { selectLanguage } from '../redux/languageSlice';\nimport { greetEng, greetUa } from '../redux/languageSlice';\nexport interface AvatarProps {}\n\nconst Avatar: React.SFC<AvatarProps> = () => {\n  let [flag, setflag] = useState(EnglishFlag);\n  const [hello, sethello] = useState('Hello');\n  const [name, setname] = useState(\"I'm Aleksandr Sekker\");\n  const [age, setage] = useState('AGE');\n  const [location, setlocation] = useState('CITY');\n  const [locationName, setlocationName] = useState('Ukraine, Kryvyi Rih');\n  const [email, setemail] = useState('EMAIL');\n  const [phone, setphone] = useState('PHONE');\n  const languageHandler = () => {\n    flag === EnglishFlag ? setflag(UkraineFlag) : setflag(EnglishFlag);\n    hello === 'Hello' ? sethello('Привіт') : sethello('Hello');\n    name === \"I'm Aleksandr Sekker\"\n      ? setname('Олександр Секкер')\n      : setname(\"I'm Aleksandr Sekker\");\n    age === 'AGE' ? setage('ВІК') : setage('AGE');\n    location === 'CITY' ? setlocation('МІСТО') : setlocation('CITY');\n    locationName === 'Ukraine, Kryvyi Rih'\n      ? setlocationName('Україна, Кривий Ріг')\n      : setlocationName('Ukraine, Kryvyi Rih');\n    email === 'EMAIL' ? setemail('Електронна пошта') : setemail('EMAIL');\n    phone === 'PHONE' ? setphone('Номер телефону') : setphone('PHONE');\n  };\n  return (\n    <div className={style.containerFluid}>\n      <div className={style.buttons}>\n        <button onClick={languageHandler}>\n          <img src={flag} alt='' className={style.flag} />\n        </button>\n        <FontAwesomeIcon icon={faSun} className={style.themeSun} />\n      </div>\n\n      <div className={style.container}>\n        <img src={AvatarImage} alt='avatar' className={style.image} />\n\n        <div className={style.secondContainer}>\n          <div className={style.message}>{hello}</div>\n          <h2>{name}</h2>\n          <h1>Front End developer</h1>\n          <hr className={style.throwLine} />\n          <div className={style.flexbox}>\n            <div className={style.contText}>\n              <p className={style.textFirst}>{age}</p>\n              <p className={style.textSecond}>23</p>\n            </div>\n            <div className={style.contText}>\n              <p className={style.textFirst}>{location}</p>\n              <p className={style.textSecond}>{locationName}</p>\n            </div>\n            <div className={style.contText}>\n              <p className={style.textFirst}>{email}</p>\n              <p className={style.textSecond}>aleksandr.sekker@gmail.com</p>\n            </div>\n            <div className={style.contText}>\n              <p className={style.textFirst}>{phone}</p>\n              <p className={style.textSecond}>0686902733</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={style.containerSocialMedia}>\n        <div className={style.socialMediaCenter}>\n          <a href='https://github.com/AleksandrSekker'>\n            <FontAwesomeIcon icon={faGithub} className={style.icons} />\n          </a>\n          <a href='https://www.linkedin.com/in/aleksandr-sekker-521352161/'>\n            <FontAwesomeIcon icon={faLinkedin} className={style.icons} />\n          </a>\n          <a href='https://join.skype.com/invite/ne1fLrVxBoC4'>\n            <FontAwesomeIcon icon={faSkype} className={style.icons} />\n          </a>\n          <a href='https://t.me/sekk_er'>\n            <FontAwesomeIcon icon={faTelegram} className={style.icons} />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport style from '../style/LearningExperience.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTerminal } from '@fortawesome/free-solid-svg-icons';\nimport {\n  faHtml5,\n  faCss3Alt,\n  faJs,\n  faSass,\n  faGitAlt,\n  faBootstrap,\n  faReact,\n  faNode,\n  faNodeJs,\n} from '@fortawesome/free-brands-svg-icons';\nexport interface LearningExperienceProps {}\n\nconst LearningExperience: React.SFC<LearningExperienceProps> = () => {\n  return (\n    <>\n      <h1 className={style.mainText}>Learning Experience</h1>\n      <div className={style.flex}>\n        <div className={style.flexColumn}>\n          <div className={style.firstContainer}>\n            <FontAwesomeIcon icon={faHtml5} className={style.html} />\n            <FontAwesomeIcon icon={faCss3Alt} className={style.css} />\n\n            <p>layout, animation, typography, colors</p>\n            <p>\n              Responsive design, grid, flexbox, semantic approach and media\n              queries\n            </p>\n          </div>\n          <div className={style.firstContainer}>\n            <FontAwesomeIcon icon={faSass} className={style.sass} />\n            <FontAwesomeIcon icon={faBootstrap} className={style.bootstrap} />\n            <FontAwesomeIcon icon={faGitAlt} className={style.git} />\n            <FontAwesomeIcon icon={faTerminal} className={style.terminal} />\n            <p>asdfsdf</p>\n          </div>\n          <div className={style.firstContainer}>\n            <p>\n              Also sometimes i use typescript, few times coding on react native\n              (using api) for test projects. Actually almost didn't use back end\n              technology, but understand how work node, express and mongo db\n            </p>\n          </div>\n        </div>\n        <div className={style.verticalLine}>\n          <div className={`${style.dot} ${style.dotOne}`}></div>\n          <div className={`${style.dot} ${style.dotTwo}`}></div>\n          <div className={`${style.dot} ${style.dotThree}`}></div>\n          <div className={`${style.dot} ${style.dotFour}`}></div>\n          <div className={`${style.dot} ${style.dotFive}`}></div>\n        </div>\n        <div className={style.flexColumnTwo}>\n          <div className={style.secondContainer}>\n            <FontAwesomeIcon icon={faJs} className={style.js} />\n            <p>Start from basic: Variables, Types, function, loops, objects </p>\n            <p>\n              DOM tree, start building project, timer, clock, quize, quizzes\n              etc. Learn es6, work with APIs\n            </p>\n          </div>\n          <div className={style.secondContainer}>\n            <FontAwesomeIcon icon={faReact} className={style.react} />\n            <p>\n              Start learn react, react router, hooks. For learning react build\n              small thing like counter, todolist, slider, filterable list,\n              random quote machine etc. Later start using redux for state\n              managment\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LearningExperience;\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\nimport Avatar from './components/Avatar';\r\nimport LearningExperience from './components/LearningExperience';\r\nimport Hobbies from './components/Hobbies';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='containerForAll'>\r\n      <Avatar />\r\n      <LearningExperience />\r\n      {/* <Hobbies />  */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\n\r\ninterface CounterState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount: number): AppThunk => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from '../app/store';\n\ninterface languageState {\n  value: string;\n}\n\nconst initialState: languageState = {\n  value: 'Hello',\n};\n\nexport const languageSlice = createSlice({\n  name: 'language',\n  initialState,\n  reducers: {\n    greetEng: (state) => {\n      state.value = 'Hello';\n    },\n    greetUa: (state) => {\n      state.value = 'Привіт';\n    },\n  },\n});\n\nexport const { greetEng, greetUa } = languageSlice.actions;\n\nexport const selectLanguage = (state: RootState) => state.language.value;\n\nexport default languageSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport languageReducer from '../redux/languageSlice';\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    language: languageReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './assets/main.css';\r\n\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}